#*******************************
# Darwin, Mac OS X
#*******************
ifeq ($(OS),Darwin)
  PROJECT_CLONE_SED_HEADER_COMMAND = find $(PROJECT_INCLUDE_DIR_API) -name "*.h" -exec sed -i '.bak' -E 's/^[ \t]*\#[ \t]*include[ \t]*"([^"]+)"/\#include <\1>/g' {} \; | 2>&1
  
  PROJECT_CFLAGS += -fPIC
  LIB_NAME_SUFFIX := .dylib
  
  #PROJECT_BUILD_SHARED_AFTER += install_name_tool -id "$(abspath $(call PROJECT_LIBRARY_WITH_VERSION))" "$(call PROJECT_LIBRARY_WITH_VERSION)" $(PROJECT_UTILS_NEWLINE)
  PROJECT_BUILD_SHARED_AFTER += ln -sf $(call PROJECT_LIBRARY_NAME_WITH_VERSION) $(call PROJECT_LIBRARY) $(PROJECT_UTILS_NEWLINE)
  PROJECT_BUILD_SHARED_AFTER += ln -sf $(call PROJECT_LIBRARY_NAME_WITH_VERSION) $(call PROJECT_LIBRARY_WITH_VERSION_MAJOR) $(PROJECT_UTILS_NEWLINE)
  PROJECT_BUILD_SHARED_AFTER += ln -sf $(call PROJECT_LIBRARY_NAME_WITH_VERSION) $(call PROJECT_LIBRARY_WITH_VERSION_MAJOR_MINOR) $(PROJECT_UTILS_NEWLINE)
  
  PROJECT_BUILD_CLEAN_AFTER += rm -f $(call PROJECT_LIBRARY) $(PROJECT_UTILS_NEWLINE)
  PROJECT_BUILD_CLEAN_AFTER += rm -f $(call PROJECT_LIBRARY_WITH_VERSION_MAJOR) $(PROJECT_UTILS_NEWLINE)
  PROJECT_BUILD_CLEAN_AFTER += rm -f $(call PROJECT_LIBRARY_WITH_VERSION_MAJOR_MINOR) $(PROJECT_UTILS_NEWLINE)
  
  PROJECT_OS_NAME := MacOSX
  PROJECT_PORT_NAME := posix
endif
# end of Darwin, Mac OS X
